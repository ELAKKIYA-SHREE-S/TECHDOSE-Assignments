class Solution {
public:
    vector<int> assignTasks(vector<int>& servers, vector<int>& tasks) {
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> busy, avl;
        vector<int> ans;
        int timer = 0;
        for(int i=0;i<servers.size();i++)
            avl.push({servers[i],i});        
        for(int i=0;i<tasks.size();i++){
            if(avl.empty())
                timer = busy.top().first;            
            while(!busy.empty() && busy.top().first<=timer){
                avl.push({servers[busy.top().second],busy.top().second});
                busy.pop();
            }            
            ans.push_back(avl.top().second);
            busy.push({timer + tasks[i],avl.top().second});
            timer=max(timer,i+1);
            avl.pop();
        }
        return ans;        
    }
};
